--getting into SQL: using SELECT 

--zadanie 1.1
SELECT *
FROM SALGRADE
--wyszlo ok

--zad 1.2
SELECT *
FROM EMP
-- w skrypcioe nie sa uporadkowane

--zad 1.3
SELECT *
FROM EMP 
WHERE (SAL >= 1000) AND (SAL <= 2000)
--dziala\

--zad 1.4
SELECT *
FROM DEPT
--dziala

--zadb 1.5
SELECT DISTINCT JOB 
FROM EMP

--ZAD 1.6
SELECT JOB , ENAME
FROM EMP
WHERE (DEPTNO = 10 OR DEPTNO= 20)
ORDER BY ENAME ASC

--ZAD 1.7
SELECT ENAME
FROM EMP
WHERE (DEPTNO = 20 AND JOB LIKE'CLERK')

--ZAD 1.8
SELECT ENAME, SAL, JOB
FROM EMP
WHERE MGR IS NOT NULL

--ZAD 1.9
SELECT ENAME, SAL
FROM EMP

--ZAD 1.10
SELECT ENAME, DEPTNO
FROM EMP
WHERE (HIREDATE>= '1982-01-01' AND HIREDATE <= '1982-12-31') 

--ZAD 1.11
SELECT ENAME, SAL*12 AS ANNUAL, COMM
FROM EMP 
WHERE (SAL > COMM AND COMM IS NOT NULL)
ORDER BY SAL DESC, ENAME ASC 

--ZAD 1.12
SELECT 'PRACOWNIK ' + ENAME + 'PRACUJE' + CAST(DEPTNO as varchar(10)) + 'OD ' + CAST(HIREDATE as varchar(10)) 
FROM EMP
--zad 1.13

SELECT ENAME
FROM EMP
WHERE ENAME like '_LA%'

--zad 1.14
SELECT ENAME, DATEDIFF ( "YEAR",  HIREDATE, getdate()) ROZNICA_LATA
FROM EMP

--ZAD 1.15
SELECT EMPNO, ENAME, JOB, MGR, HIREDATE,  SAL,  COMM, DEPTNO
FROM EMP
WHERE HIREDATE < '1981-01-01'
-- sorting information

--ZAD 2.1
SELECT MIN(SAL) 
FROM EMP

--ZAD 2.2
SELECT MIN(SAL), MAX(SAL)
FROM EMP

--ZAD 2.3
SELECT MIN(SAL), MAX(SAL), JOB 
FROM EMP
GROUP BY JOB

--ZAD 2.4
SELECT COUNT (JOB)
FROM EMP 
WHERE JOB= 'MANAGER'


--ZAD 2.5
SELECT AVG(SAL), AVG(SAL*12) AS ANNUAL, JOB
FROM EMP
GROUP BY JOB

--ZAD 2.6
SELECT MAX(SAL) - MIN(SAL)
FROM EMP

--ZAD 2.7
SELECT COUNT(ENAME), DEPTNO
FROM EMP
GROUP BY DEPTNO
HAVING COUNT(ENAME)>3
--ZAD 2.8
SELECT COUNT(EMPNO), EMPNO
FROM EMP
GROUP BY EMPNO
HAVING COUNT(ENAME)>1
--ZAD 2.9

SELECT MGR, MIN(SAL) 
FROM EMP
GROUP BY MGR
HAVING MIN(SAL)>1000
ORDER BY MIN(SAL)
--ZAD 3.1
SELECT DEPT.DNAME, ENAME
FROM EMP INNER JOIN DEPT ON DEPT.DEPTNO=EMP.DEPTNO
ORDER BY DEPT.DNAME;
 
 --ZAD 3.2
 SELECT EMP.ENAME, DEPT.DEPTNO, DNAME
 FROM DEPT INNER JOIN EMP ON DEPT.DEPTNO=EMP.DEPTNO
 ORDER BY DEPT.DEPTNO

 --ZAD 3.3
 SELECT SAL, ENAME, LOC, DNAME
 FROM DEPT INNER JOIN EMP ON DEPT.DEPTNO=EMP.DEPTNO
 WHERE SAL >1500 

 --ZAD 3.4
 SELECT ENAME, JOB, SAL, GRADE
 FROM EMP INNER JOIN SALGRADE ON EMP.SAL>=SALGRADE.GRADE

 --zad 3.5
 SELECT ENAME, JOB, SAL, GRADE
 FROM EMP INNER JOIN SALGRADE ON EMP.SAL>=SALGRADE.GRADE
 WHERE GRADE=3
 --ZAD 3.6
 SELECT ENAME, SAL, LOC
 FROM EMP INNER JOIN DEPT ON EMP.DEPTNO=DEPT.DEPTNO 
 WHERE LOC='DALLAS'

 --ZAD 3.7
 SELECT ENAME, JOB, SAL, GRADE, DNAME
 FROM DEPT JOIN EMP ON DEPT.DEPTNO=EMP.DEPTNO JOIN SALGRADE ON EMP.SAL>=SALGRADE.GRADE
 WHERE JOB <> 'CLERK'
 ORDER BY SAL


 --ZAD 3.8
 SELECT S.ENAME AS S, P.ENAME AS P 
 FROM EMP P JOIN EMP S  ON S.EMPNO=P.MGR
--ZAD 4.1
 SELECT DEPT.DEPTNO, DNAME
FROM DEPT LEFT JOIN EMP ON DEPT.DEPTNO= EMP.DEPTNO 
WHERE JOB IS NULL
--ZAD 4.2
SELECT S.ENAME AS S, S.EMPNO AS SZ, P.ENAME AS P, P.EMPNO AS PR 
FROM EMP P JOIN EMP S  ON S.EMPNO=P.MGR

--ZAD 4.3
SELECT S.ENAME AS S, S.EMPNO AS SZ, P.ENAME AS P, P.EMPNO AS PR 
FROM EMP P LEFT JOIN EMP S  ON S.EMPNO=P.MGR
--ZAD 4.4 
SELECT JOB
FROM EMP
WHERE HIREDATE BETWEEN '1982-01-01' AND '1982-06-30'
INTERSECT
SELECT JOB
FROM EMP
WHERE HIREDATE BETWEEN '1983-01-01' AND '1983-06-30'

 --ZAD 4.5
 SELECT  S.ENAME AS S, S.EMPNO AS SZ, S.HIREDATE, P.ENAME AS P, P.EMPNO AS PR, P.HIREDATE  
 FROM EMP P JOIN EMP S ON S.EMPNO=P.MGR
 WHERE S.HIREDATE> P.HIREDATE

 --ZAD 4.7
 SELECT  S.ENAME, AS S, S.EMPNO AS SZ, S.HIREDATE, P.ENAME AS P, P.EMPNO AS PR, P.HIREDATE
 FROM EMP P FULL OUTER JOIN EMP S ON S.EMPNO=P.MGR

 --ZAD 4.8
 SELECT  ISNULL( S.ENAME, 'NIE MA SZEFA') AS S, S.EMPNO AS SZ, S.HIREDATE, P.ENAME AS P, P.EMPNO AS PR, P.HIREDATE
 FROM EMP P FULL OUTER JOIN EMP S ON S.EMPNO=P.MGR
--ZAD 5.1
 SELECT JOB, ENAME, SAL
 FROM EMP E
 WHERE SAL = (SELECT MAX(SAL)
			FROM EMP
			WHERE JOB= E.JOB )
ORDER BY SAL
 
 --ZAD 5.2
 SELECT JOB, ENAME, SAL
 FROM EMP E
 WHERE SAL = (SELECT MIN(SAL)
			FROM EMP
			WHERE JOB= E.JOB )
ORDER BY SAL

--ZAD 5.3
SELECT DEPTNO, ENAME, HIREDATE
FROM EMP E
WHERE HIREDATE = (SELECT MAX(HIREDATE)
				FROM EMP
				WHERE JOB= E.JOB
				)
ORDER BY HIREDATE

--ZAD 5.4
SELECT ENAME, SAL, DEPTNO
FROM EMP E
WHERE SAL > (SELECT AVG(SAL)
			FROM EMP
			WHERE DEPTNO= E.DEPTNO
			)
ORDER BY DEPTNO

--ZAD 5.5

SELECT DEPTNO, DNAME
FROM DEPT D
WHERE NOT EXISTS (SELECT ENAME 
				FROM EMP E
				WHERE E.DEPTNO=D.DEPTNO)
				ORDER BY DEPTNO;
--ZAD 5.6

SELECT ENAME, (SELECT  GRADE 
					FROM SALGRADE
					WHERE  SAL BETWEEN LOSAL AND HISAL)
FROM EMP

--ZAD 5.7
SELECT DNAME, JOB, COUNT(JOB)
FROM (SELECT *  FROM EMP E WHERE SAL >(SELECT AVG(SAL)
						FROM EMP
						WHERE DEPTNO= E.DEPTNO)
) TAB RIGHT JOIN DEPT  ON TAB.DEPTNO=DEPT.DEPTNO
GROUP BY DNAME, JOB

--zad5.7
SELECT ENAME, JOB, DEPTNO, SAL, EMPNO
FROM  EMP 
WHERE JOB= (SELECT JOB FROM EMP WHERE EMPNO = 7369) AND SAL >= (SELECT SAL FROM EMP WHERE EMPNO = 7876)
			

-- ZAD 5.8
SELECT DNAME, JOB
FROM DEPT JOIN EMP ON DEPT.DEPTNO= EMP.DEPTNO
WHERE JOB= 'CLERK'

-- ZAD 5.9
SELECT ENAME, SAL, AVG(SAL)
FROM EMP
GROUP BY SAL, ENAME
 --ZAD 5.10
 SELECT 

 CASE
 WHEN 1> 2 THEN T
 WHEN 2>1 THEN F
 END

 --ZAD 5.12
 SELECT DNAME
 FORMAT (COUNT(*)*1.0/LICZBA_PRAC, 'P'),
FORMAT (SUM(SAL) *1.0/SUMA_ZAR, 'P')
FROM EMP JOIN DEPT ON DEPT.DEPTNO=EMP.EMPNO,
(SELECT COUNT(*) LICZBA_PRAC, SUM(SAL) SUMA_ZAR FROM EMP) TAB 
GROUP BY DNAME, LICZBA_PRAC, SUMA_ZAR
--ZAD 6.1 WYBIERA OKREONE POZIOMY, PODSUMOWANIE DEP I STANOWISK
SELECT DEPTNO, JOB, GROUPING(DEPTNO), GROUPING(JOB), SUM(SAL), GROUPING_ID (JOB)
FROM EMP
GROUP BY CUBE(DEPTNO, JOB)
HAVING GROUPING_ID(DEPTNO, JOB) IN (2,1) 

SELECT S.ENAME, S.DEPTNO, SUM(P.SAL)
FROM EMP P JOIN EMP S ON P.MGR = S.EMPNO
GROUP BY ROLLUP(S.DEPTNO, S.ENAME)
ORDER BY 1,2

--ZAD 6.2
SELECT S.ENAME, S.DEPTNO, SUM(P.SAL)
FROM EMP P JOIN EMP S ON P.MGR=S.EMPNO
GROUP BY CUBE(S.DEPTNO, S.ENAME)
ORDER BY 1,2

--ZAD 6.3
SELECT DNAME, JOB, ENAME, COUNT(*), SUM(SAL)

FROM EMP JOIN DEPT ON EMP.DEPTNO= DEPT.DEPTNO
GROUP BY ROLLUP (DNAME, JOB, ENAME)

--ZAD 6.4
SELECT DNAME, JOB, COUNT(*), SUM(SAL)
FROM EMP JOIN DEPT ON EMP.DEPTNO=DEPT.DEPTNO
GROUP BY ROLLUP(DNAME, JOB)


--ZAD 7.1 DATEPART("WEEKDAY", GETDATE())DATEIFF("QUARTER", '1991-01-01, GETDATE()) RZNICA MIEDZY DATAMI, DATA PRZYSZLA; DATEADD("QUARTER", 12, '1991-01-01')
SELECT ENAME, HIREDATE, SAL,
CASE 
WHEN DATEADD("YEAR", 38, '1981-01-01')= '2019-01-01' THEN SAL+1000
WHEN  DATEADD("YEAR", 37, '1981-01-01')= '2018-01-01' THEN SAL + 700
WHEN DATEADD("YEAR", 36, '1981-01-01')= '2017-01-01'  THEN SAL + 500
END [NOWA PENSJA] 
FROM EMP

--ZAD 7.2
SELECT ENAME, HIREDATE, SAL,
CASE
	WHEN DATEPART("YEAR", HIREDATE)= '1981' THEN CAST(SAL+1000 AS VARCHAR(MAX))
	WHEN DATEPART("YEAR", HIREDATE)= '1982' THEN 
		CASE WHEN DATEPART("WEEKDAY", HIREDATE)= '3'  THEN 'UMOW SPOTKANIE NA NASTEPNY WTOREK'
			 WHEN DATEPART("WEEKDAY", HIREDATE)<> '3' THEN 'UMOW SPOTKANIE NA NAJBLIZSZY WTOREK'
		END
	ELSE 'WYSLIJ MAILA Z GRATULACJAMI'
	END [ZADANIE]
FROM EMP
--ZAD 8.1
SELECT *, ISNULL([ANALYST], 0) + [CLERK]+ [MANAGER] + [PRESIDENT] + ISNULL([SALESMAN], 0)  AS TOTAL
FROM (SELECT DEPTNO, JOB, SAL FROM EMP) AS ZRODLO
PIVOT (
	SUM(SAL)
	FOR JOB IN ([ANALYST], [CLERK], [MANAGER], [PRESIDENT], [SALESMAN])
	)
AS PVT
WHERE ANALYST IS NULL

SELECT *
FROM (SELECT DEPTNO, JOB, SAL FROM EMP) AS ZRODLO
PIVOT (
	SUM(SAL) 
	FOR DEPTNO IN ( [10], [20], [30])
	) AS PVT 
GO
SELECT *
FROM (SELECT DNAME, JOB
		FROM DEPT JOIN EMP  ON DEPT.DEPTNO= EMP.DEPTNO) AS ZRODLO
PIVOT(
	COUNT(JOB)
	FOR JOB  IN ([ANALYST], [CLERK], [MANAGER], [PRESIDENT], [SALESMAN])
	)
AS PVT

--ZAD 8.3
SELECT * 
FROM (SELECT DNAME, JOB, SAL
		FROM DEPT JOIN EMP ON DEPT.DEPTNO= EMP.DEPTNO) AS ZRODLO
PIVOT(
	SUM(SAL)
	FOR JOB  IN ([ANALYST], [CLERK], [MANAGER], [PRESIDENT], [SALESMAN])
	)
AS PVT
--ZAD 8.2
SELECT * 
FROM (SELECT DNAME, JOB, SAL
		FROM DEPT JOIN EMP ON DEPT.DEPTNO= EMP.DEPTNO
		WHERE SAL> ( SELECT AVG(SAL)
					FROM EMP)
	 ) AS ZRODLO
PIVOT(
	AVG(SAL)
	FOR JOB  IN ([ANALYST], [CLERK], [MANAGER], [PRESIDENT], [SALESMAN])
	)
AS PVT

--ZAD 8.4 
SELECT DNAME, ISNULL(SUM([ANALYST]),0) ANALYST, ISNULL(SUM([CLERK]),0), ISNULL(SUM([MANAGER]),0), ISNULL(SUM([PRESIDENT]),0), ISNULL(SUM([SALESMAN]),0)
FROM (SELECT DNAME, JOB, SAL
		FROM DEPT JOIN EMP ON DEPT.DEPTNO= EMP.DEPTNO) AS ZRODLO
PIVOT(
	SUM(SAL)
	FOR JOB  IN ([ANALYST], [CLERK], [MANAGER], [PRESIDENT], [SALESMAN])
	)
AS PVT
GROUP BY GROUPING SETS( (DNAME, ANALYST, CLERK, MANAGER, PRESIDENT, SALESMAN))

--ZESTAW 9
SELECT ENAME, JOB, DEPTNO, SAL, RANK() OVER(ORDER BY SAL),
								DENSE_RANK() OVER (ORDER BY SAL)
FROM EMP
GO

SELECT ENAME, JOB, DEPTNO, SAL, RANK() OVER (PARTITION BY DEPTNO ORDER BY SAL)
FROM EMP

SELECT ENAME, JOB, DEPTNO, SAL, PERCENT_RANK() OVER (ORDER BY SAL)
FROM EMP

SELECT ENAME, JOB, DEPTNO, SAL, NTILE(4) OVER (PARTITION BY DEPTNO ORDER BY SAL)
FROM EMP

SELECT ENAME, JOB, DEPTNO, SAL, LAG(SAL) OVER(ORDER BY SAL)
FROM EMP

SELECT ENAME, JOB, DEPTNO, SAL, SUM(SAL) OVER( ORDER BY SAL ROWS BETWEEN UNBOUNDED PRECEDING AND 1 FOLLOWING)
FROM EMP

SELECT ENAME, JOB, DEPTNO, SAL, MIN(SAL) OVER (PARTITION BY DEPTNO ORDER BY SAL) MINIMUM,
							    MAX(SAL) OVER( PARTITION BY DEPTNO ORDER BY SAL 
								ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) MAXIMUM
FROM EMP

SELECT ENAME, JOB, DEPTNO, SAL, LAST_VALUE(ENAME) OVER (PARTITION BY DEPTNO ORDER BY SAL ROWS BETWEEN UNBOUNDED PRECEDING
													AND UNBOUNDED FOLLOWING)

FROM EMP
--ZAD 11.1
SELECT SAL, JOB, DEPTNO, ENAME, DENSE_RANK() OVER(ORDER BY SAL DESC),
								DENSE_RANK() OVER (ORDER BY SAL)
FROM EMP
GO

--ZAD 11.2

SELECT *
FROM (
SELECT JOB, ENAME, HIREDATE, RANK() OVER (ORDER BY SAL) AS RANKING
FROM EMP)
AS TAB
WHERE RANKING <4

--ZAD 11.3

SELECT ENAME, JOB, DEPTNO, SAL,

MIN(SAL)  OVER (PARTITION BY DEPTNO ORDER BY SAL),
MAX(SAL)  OVER (PARTITION BY DEPTNO ORDER BY SAL),
AVG(SAL)  OVER (PARTITION BY DEPTNO ORDER BY SAL)
FROM EMP 